class Command:
    def execute(self):
        pass

class WaterFlowerCommand(Command):
    def __init__(self, flower):
        self.flower = flower

    def execute(self):
        self.flower.water()

class AddFlowerCommand(Command):
    def __init__(self, garden, flower):
        self.garden = garden
        self.flower = flower

    def execute(self):
        self.garden.add_flower(self.flower)

class RemoveFlowerCommand(Command):
    def __init__(self, garden, flower):
        self.garden = garden
        self.flower = flower

    def execute(self):
        self.garden.remove_flower(self.flower)

class GardenerInvoker:
    def __init__(self):
        self.commands = []

    def add_command(self, command):
        self.commands.append(command)

    def execute_commands(self):
        for command in self.commands:
            command.execute()
